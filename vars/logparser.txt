<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<!-- documentation for $JOB_URL//pipeline-syntax/globals -->
<div>
    <p>
        <a href="https://github.com/gdemengin/pipeline-logparser">pipeline-logparser</a> a library to parse and filter logs, and to retrieve log urls
    </p>
    <dl>
        <dt>
            <b><code>java.util.ArrayList getBlueOceanUrls(RunWrapper build = currentBuild)</code></b>
        </dt>
        <dd>
            <p>
                get tree of Blue Ocean steps, with links to logs, and information about parallel branches and stages<br>
                layed out as a list with each element a map of step information to traverse the tree:
                <ul>
                    <li>
                        <b><code>id</code></b> : the id of the step
                    </li>
                    <li>
                        <b><code>name</code></b> : the name of the step if it is the start of a branch or a stage (null otherwise)
                    </li>
                    <li>
                        <b><code>stage</code></b> : true if the step is the start of a stage
                    </li>
                    <li>
                        <b><code>parents</code></b> : id of the parent steps, closest parent first
                    </li>
                    <li>
                        <b><code>parent</code></b> : id of immediate parent step
                    </li>
                    <li>
                        <b><code>url</code></b> : url of the step in Blue Ocean view
                    </li>
                    <li>
                        <b><code>log</code></b> : url to the Blue Ocean logs (log might be incorrect in case of nested stage)
                    </li>
                </ul>
                examples<br>
                <ul>
                    <li>
                        <b>from current run</b><br>
                        <code><br>
                            &nbsp;&nbsp;stage ('stage1') {<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;parallel (<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;)<br>
                            &nbsp;&nbsp;}<br>
                            &nbsp;&nbsp;def blueTree = logparser.getBlueOceanUrls()<br>
                        </code><br>
                        result:<br>
                        <code><br>
                            &nbsp;&nbsp;blueTree = [<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;[<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:2, name:null, stage:false, parents:[], parent:null,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url:https://mydomain.com/blue/organizations/jenkins/myjob/detail/myjob/1/pipeline,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log:https://mydomain.com/blue/rest/organizations/jenkins/pipelines/myjob/runs/1/log/?start=0<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;[<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:4, name:stage1, stage:true, parents:[2], parent:2,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url:https://mydomain.com/blue/organizations/jenkins/myjob/detail/myjob/1/pipeline/4,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log:https://mydomain.com/blue/rest/organizations/jenkins/pipelines/myjob/runs/1/nodes/4/log/?start=0<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;[<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:7, name:branch1, stage:false, parents:[4, 2], parent:4,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url:https://mydomain.com/blue/organizations/jenkins/myjob/detail/myjob/1/pipeline/7,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log:https://mydomain.com/blue/rest/organizations/jenkins/pipelines/myjob/runs/1/nodes/7/log/?start=0<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;[<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:8, name:branch2, stage:false, parents:[4, 2], parent:4,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url:https://mydomain.com/blue/organizations/jenkins/myjob/detail/myjob/1/pipeline/8,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log:https://mydomain.com/blue/rest/organizations/jenkins/pipelines/myjob/runs/1/nodes/8/log/?start=0<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;]<br>
                            &nbsp;&nbsp;]<br>
                        </code><br>
                    </li>
                    <li>
                        <b>from another job/run</b><br>
                        <code><br>
                            &nbsp;&nbsp;// get RunWrapper for current job last stable run<br>
                            &nbsp;&nbsp;// using https://github.com/gdemengin/pipeline-whitelist<br>
                            &nbsp;&nbsp;@Library('pipeline-whitelist@4.0') _<br>
                            &nbsp;&nbsp;def otherBuild = whitelist.getLastStableRunWrapper(whitelist.getJobByName(env.JOB_NAME))<br>
                            &nbsp;&nbsp;<br>
                            &nbsp;&nbsp;def blueTree = logparser.getBlueOceanUrls(otherBuild)<br>
                        </code><br>
                    </li>
                </ul>
            </p>
        </dd>
        <dt>
            <b><code>String getLogsWithBranchInfo(java.util.LinkedHashMap options = [:], RunWrapper build = currentBuild)</code></b><br>
            <b><code>void archiveLogsWithBranchInfo(String name, java.util.LinkedHashMap options = [:])</code></b><br>
            <b><code>void writeLogsWithBranchInfo(hudson.FilePath filePath, java.util.LinkedHashMap options = [:], build = currentBuild)</code></b><br>
            <b><code>void writeLogsWithBranchInfo(String node, String path, java.util.LinkedHashMap options = [:], build = currentBuild)</code></b><br>
        </dt>
        <dd>
            <p>
                get logs with branch name on each branch line<br>
                or archive them in run artifacts<br>
                or write them in a file on one of the nodes<br>
                <br>
                available options:
                <ul>
                    <li>
                        <b><code>filter = []</code></b> : list of Strings (names of branches to filter or regexp or null)
                        <ul>
                            <li>if empty: no filtering</li>
                            <li>list may contain regular expressions</li>
                            <li>use null to filter main thread logs</li>
                        </ul>
                    </li>
                    <li>
                        <b><code>showParents = true</code></b> : show name of parent branches<br>
                        &nbsp;&nbsp;example: <code>"<b>[branch2]</b> [branch21] in branch21 nested in branch2"</code>
                    </li>
                    <li>
                        <b><code>showStages = false</code></b> : show name of stages (and use them when filter and showParents are set)
                    </li>
                    <li>
                        <b><code>markNestedFiltered = true</code></b> : add name of nested branches filtered out<br>
                        &nbsp;&nbsp;example: <code>"&lt;nested branch [branch2]&gt;"</code>
                    </li>
                    <li>
                        <b><code>hidePipeline = true</code></b> : hide the Pipeline technical logs (lines starting with [Pipeline])
                    </li>
                    <li>
                        <b><code>hideVT100 = true</code></b> : hide the VT100 markups in logs<br>
                        &nbsp;&nbsp;cf https://www.codesd.com/item/how-to-delete-jenkins-console-log-annotations.html<br>
                        &nbsp;&nbsp;cf https://issues.jenkins-ci.org/browse/JENKINS-48344
                    </li>
                </ul>
                examples<br>
                <ul>
                    <li>
                        <b>retrieve logs with branch info</b>
                        <ul>
                            <li>
                                <b>add branch prefix [branchName] in front of each line for that branch</b><br>
                                <code><br>
                                    &nbsp;&nbsp;echo 'not in any branch'<br>
                                    &nbsp;&nbsp;parallel (<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                                    &nbsp;&nbsp;)<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo()<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;not in any branch<br>
                                    &nbsp;&nbsp;[branch1] in branch1<br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                </code><br>
                            </li>
                            <li>
                                <b>hide stage name</b> with option <code>showStages=false</code><br>
                                <code><br>
                                    &nbsp;&nbsp;stage ('stage1') {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in stage 1'<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(showStages: true)<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;in stage 1<br>
                                </code><br>
                                or show stage name (default)<br>
                                <code><br>
                                    &nbsp;&nbsp;stage ('stage1') {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in stage 1'<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo()<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[stage1] in stage 1<br>
                                </code><br>
                            </li>
                            <li>
                                <b>show parent branch name</b> (parent branch first) for nested branches<br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: { echo 'in branch2.branch21' }<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo()<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                    &nbsp;&nbsp;[branch2] [branch21] in branch2.branch21<br>
                                </code><br>
                            </li>
                            <li>
                                <b>hide parent branch name</b> with option <code>showParents=false</code><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: { echo 'in branch2.branch21' }<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(showParents: false)<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                    &nbsp;&nbsp;[branch21] in branch2.branch21<br>
                                </code><br>
                            </li>
                            <li>
                                <b>show duplicate parent branch name</b> with option <code>mergeNestedDuplicates=false</code><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;stage('branch2') { echo 'in stage branch2' }<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(mergeNestedDuplicates: false)<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] [branch2] in stage branch2
                                </code><br>
                                or hide duplicates (default)
                                <code><br>
                                    &nbsp;&nbsp;parallel branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;stage('branch2') { echo 'in stage branch2' }<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo()<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] in stage branch2
                                </code><br>
                            <li>
                                <b>show VT100 markups</b> (hidden by default as they make raw log hard to read) with option <code>hideVT100=false</code><br>
                                <code><br>
                                    &nbsp;&nbsp;// use node to make sure VT100 markups are in the logs<br>
                                    &nbsp;&nbsp;node {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;def logs = logparser.getLogsWithBranchInfo(hideVT100: false)<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;assert logs ==~ /(?s).*\x1B\[8m.*?\x1B\[0m.*/<br>
                                    &nbsp;&nbsp;}<br>
                                </code><br>
                            </li>
                            <li>
                                <b>show Pipeline technical log lines</b> (starting with [Pipeline]) with option <code>hidePipeline=false</code><br>
                                <code><br>
                                    &nbsp;&nbsp;echo 'not in any branch'<br>
                                    &nbsp;&nbsp;parallel (<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                                    &nbsp;&nbsp;)<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(hidePipeline: false)<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[Pipeline] Start of Pipeline<br>
                                    &nbsp;&nbsp;[Pipeline] echo<br>
                                    &nbsp;&nbsp;not in any branch<br>
                                    &nbsp;&nbsp;[Pipeline] parallel<br>
                                    &nbsp;&nbsp;[Pipeline] [branch1] { (Branch: branch1)<br>
                                    &nbsp;&nbsp;[Pipeline] [branch1] echo<br>
                                    &nbsp;&nbsp;[branch1] in branch1<br>
                                    &nbsp;&nbsp;[Pipeline] [branch2] { (Branch: branch2)<br>
                                    &nbsp;&nbsp;[Pipeline] [branch2] echo<br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                    &nbsp;&nbsp;[Pipeline] }<br>
                                    &nbsp;&nbsp;[Pipeline] }<br>
                                    &nbsp;&nbsp;[Pipeline] // parallel<br>
                                </code><br>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <b>archive logs in job artifacts</b> (without having to allocate a node : same as ArchiveArtifacts but without <code>node()</code> scope)<br>
                        <code><br>
                            &nbsp;&nbsp;echo 'not in any branch'<br>
                            &nbsp;&nbsp;parallel (<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                            &nbsp;&nbsp;)<br>
                            &nbsp;&nbsp;logparser.archiveLogsWithBranchInfo('logs.txt')<br>
                        </code><br>
                        result: logs.txt in $BUILD_URL/artifact with content:<br>
                        <code><br>
                            &nbsp;&nbsp;not in any branch<br>
                            &nbsp;&nbsp;[branch1] in branch1<br>
                            &nbsp;&nbsp;[branch2] in branch2<br>
                        </code><br>
                    </li>
                    <li>
                        <b>write logs directly to a file</b><br>
                        <code><br>
                            &nbsp;&nbsp;echo 'not in any branch'<br>
                            &nbsp;&nbsp;parallel (<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                            &nbsp;&nbsp;)<br>
                            &nbsp;&nbsp;node('myhost') {<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;logparser.writeLogsWithBranchInfo(env.NODE_NAME, "${pwd()}/logs.txt")<br>
                            &nbsp;&nbsp;}<br>
                        </code><br>
                        result: logs.txt in workspace on node 'myhost' with content:<br>
                        <code><br>
                            &nbsp;&nbsp;not in any branch<br>
                            &nbsp;&nbsp;[branch1] in branch1<br>
                            &nbsp;&nbsp;[branch2] in branch2<br>
                            &nbsp;&nbsp;Running on myhost in /home/jenkins/workspace/test-pipeline<br>
                        </code><br>
                    </li>
                    <li>
                        <b>filter branch logs</b> with option <code>filter=[ list of branches to keep ]</code>
                        <ul>
                            <li>
                                <b>filter by name</b><br>
                                <code><br>
                                    &nbsp;&nbsp;echo 'not in any branch'<br>
                                    &nbsp;&nbsp;parallel (<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                                    &nbsp;&nbsp;)<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ 'branch1' ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch1] in branch1<br>
                                </code><br>
                            </li>
                            <li>
                                <b>filter multiple branches</b><br>
                                <code><br>
                                    &nbsp;&nbsp;echo 'not in any branch'<br>
                                    &nbsp;&nbsp;parallel (<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch3: { echo 'in branch3' }<br>
                                    &nbsp;&nbsp;)<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ 'branch1', 'branch3' ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch1] in branch1<br>
                                    &nbsp;&nbsp;[branch3] in branch3<br>
                                </code><br>
                            </li>
                            <li>
                                <b>filter with regular expression</b><br>
                                <code><br>
                                    &nbsp;&nbsp;echo 'not in any branch'<br>
                                    &nbsp;&nbsp;parallel (<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                                    &nbsp;&nbsp;)<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ '.*2' ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                </code><br>
                            </li>
                            <li>
                                <b>show name of nested branches filtered out</b><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: { echo 'in branch2.branch21' }<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ 'branch2' ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                    &nbsp;&nbsp;&lt;nested branch [branch2] [branch21]&gt;<br>
                                </code><br>
                            </li>
                            <li>
                                <b>hide name of nested branches filtered out</b> with option <code>markNestedFiltered=false</code><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: { echo 'in branch2.branch21' }<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ 'branch2' ], markNestedFiltered: false)<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] in branch2<br>
                                </code><br>
                            </li>
                            <li>
                                <b>filter logs not in any branch</b><br>
                                <code><br>
                                    &nbsp;&nbsp;echo 'not in any branch'<br>
                                    &nbsp;&nbsp;parallel (<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                                    &nbsp;&nbsp;)<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ null ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;not in any branch<br>
                                    &nbsp;&nbsp;&lt;nested branch [branch1]&gt;<br>
                                    &nbsp;&nbsp;&lt;nested branch [branch2]&gt;<br>
                                </code><br>
                            </li>
                            <li>
                                <b>filter branch using list of parent name(s)</b><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch1: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch11: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1.branch11'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parallel branchA: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1.branch11.branchA'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;}, branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2.branch21'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parallel branchA: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2.branch21.branchA'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ [ 'branch2', 'branch21', 'branchA' ] ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] [branch21] [branchA] in branch2.branch21.branchA<br>
                                </code><br>
                            </li>
                            <li>
                                <b>ilter branch using the immediate parent name(s)</b><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch1: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch11: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1.branch11'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parallel branchA: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1.branch11.branchA'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;}, branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2.branch21'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parallel branchA: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2.branch21.branchA'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ [ 'branch21', 'branchA' ] ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] [branch21] [branchA] in branch2.branch21.branchA<br>
                                </code><br>
                            </li>
                            <li>
                                <b>filter branch using regular expression on parent name(s)</b><br>
                                <code><br>
                                    &nbsp;&nbsp;parallel branch1: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch11: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1.branch11'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parallel branchA: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch1.branch11.branchA'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;}, branch2: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;parallel branch21: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2.branch21'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parallel branchA: {<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo 'in branch2.branch21.branchA'<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;}<br>
                                    &nbsp;&nbsp;print logparser.getLogsWithBranchInfo(filter: [ [ 'branch2.*', '.*A' ] ])<br>
                                </code><br>
                                result:<br>
                                <code><br>
                                    &nbsp;&nbsp;[branch2] [branch21] [branchA] in branch2.branch21.branchA<br>
                                </code><br>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <b>get logs from another job/run</b><br>
                        <code><br>
                            &nbsp;&nbsp;// get RunWrapper for current job last stable run<br>
                            &nbsp;&nbsp;// using https://github.com/gdemengin/pipeline-whitelist<br>
                            &nbsp;&nbsp;@Library('pipeline-whitelist@4.0') _<br>
                            &nbsp;&nbsp;def otherBuild = whitelist.getLastStableRunWrapper(whitelist.getJobByName(env.JOB_NAME))<br>
                            &nbsp;&nbsp;<br>
                            &nbsp;&nbsp;def otherBuildLogs = logparser.getLogsWithBranchInfo([:], otherBuild)<br>
                        </code><br>
                    </li>
                </ul>
            </p>
        </dd>
    </dl>
    <dl>
        <dt>
            <b><code>java.util.ArrayList getPipelineStepsUrls(RunWrapper build = currentBuild)</code></b>
        </dt>
        <dd>
            <p>
                get pipeline steps tree, with links to logs, and information about parallel branches and stages<br>
                layed out as a list with each element a map of step information to traverse the tree:
                <ul>
                    <li>
                        <b><code>id</code></b> : the id of the step
                    </li>
                    <li>
                        <b><code>name</code></b> : the name of the step if it is the start of a branch or a stage (absent otherwise)
                    </li>
                    <li>
                        <b><code>stage</code></b> : true if the step is the start of a stage
                    </li>
                    <li>
                        <b><code>parents</code></b> : id of the parent steps, closest parent first
                    </li>
                    <li>
                        <b><code>parent</code></b> : id of immediate parent step
                    </li>
                    <li>
                        <b><code>children</code></b> : id of the children steps
                    </li>
                    <li>
                        <b><code>url</code></b> : url of the step in Pipeline Steps view
                    </li>
                    <li>
                        <b><code>log</code></b> : url to the logs (absent if no logs)
                    </li>
                    <li>
                        <b><code>wfapiLog</code></b> : url to the REST API logs (absent if no logs)
                    </li>
                    <li>
                        <b><code>label</code></b> : label used for node/agent steps (if applicable)
                    </li>
                    <li>
                        <b><code>host</code></b> : hostname used for node/agent steps (if applicable)
                    </li>
                </ul>
                examples<br>
                <ul>
                    <li>
                        <b>from current run</b><br>
                        <code><br>
                            &nbsp;&nbsp;stage ('stage1') {<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;parallel (<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;branch1: { echo 'in branch1' },<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;branch2: { echo 'in branch2' }<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;)<br>
                            &nbsp;&nbsp;}<br>
                            &nbsp;&nbsp;def stepsTree = logparser.getPipelineStepsUrls()<br>
                        </code><br>
                        result:<br>
                        <code><br>
                            &nbsp;&nbsp;stepsTree = [<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=2, name=null, stage=false, parents=[], parent=null, children=[3, 19],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/2/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=3, name=null, stage=false, parents=[2], parent=2, children=[4, 18],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/3/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/3/log, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=4, name=stage1, stage=true, parents=[3, 2], parent=3, children=[5, 17],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/4/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=5, name=null, stage=false, parents=[4, 3, 2], parent=4, children=[7, 8, 10, 16],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/5/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/5/log, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=7, name=branch1, stage=false, parents=[5, 4, 3, 2], parent=5, children=[9],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/7/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=9, name=null, stage=false, parents=[7, 5, 4, 3, 2], parent=7, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/9/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/9/log, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=8, name=branch2, stage=false, parents=[5, 4, 3, 2], parent=5, children=[11, 15],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/8/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=11, name=null, stage=false, parents=[8, 5, 4, 3, 2], parent=8, children=[12, 14],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/11/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/11/log, label=linux, host=linux-12345<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=12, name=null, stage=false, parents=[11, 8, 5, 4, 3, 2], parent=11, children=[13],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/12/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=13, name=null, stage=false, parents=[12, 11, 8, 5, 4, 3, 2], parent=12, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/13/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/13/log, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=14, name=null, stage=false, parents=[11, 8, 5, 4, 3, 2], parent=11, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/14/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=15, name=null, stage=false, parents=[8, 5, 4, 3, 2], parent=8, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/15/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=10, name=null, stage=false, parents=[5, 4, 3, 2], parent=5, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/10/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=16, name=null, stage=false, parents=[5, 4, 3, 2], parent=5, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/16/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=17, name=null, stage=false, parents=[4, 3, 2], parent=4, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/17/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=18, name=null, stage=false, parents=[3, 2], parent=3, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/18/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;},<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;{<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=19, name=null, stage=false, parents=[2], parent=2, children=[],<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=http://ci.jenkins.internal:8080/job/testFolder/job/testNestedFolder/job/testPipeline/7/execution/node/19/,<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log=null, label=null, host=null<br>
                            &nbsp;&nbsp;&nbsp;&nbsp;}<br>
                            &nbsp;&nbsp;]<br>
                        </code><br>
                    </li>
                    <li>
                        <b>from another job/run</b><br>
                        <code><br>
                            &nbsp;&nbsp;// get RunWrapper for current job last stable run<br>
                            &nbsp;&nbsp;// using https://github.com/gdemengin/pipeline-whitelist<br>
                            &nbsp;&nbsp;@Library('pipeline-whitelist@4.0') _<br>
                            &nbsp;&nbsp;def otherBuild = whitelist.getLastStableRunWrapper(whitelist.getJobByName(env.JOB_NAME))<br>
                            &nbsp;&nbsp;<br>
                            &nbsp;&nbsp;def stepsTree = logparser.getPipelineStepsUrls(otherBuild)<br>
                        </code><br>
                    </li>
                </ul>
            </p>
        </dd>
    </dl>
</div>
